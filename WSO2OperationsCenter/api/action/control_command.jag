<%
include("/util/node_cache_manager.jag");

var log = new Log();
var ws = require('ws');

var nodeId = request.getParameter("nodeId");
var action = request.getParameter("action");

var node = getNodeFromNodeId(nodeId);
if (node != null){

    var options = new Array();
    options.useSOAP = false;
    options.action = 'urn:command';
    options.HTTPMethod = "GET";

    options["HTTPHeaders"] = [ { name : "Authorization", value : "Basic YWRtaW46YWRtaW4="} ];

    var ws_request = new ws.WSRequest();
    ws_request.open(options, node.adminServiceURL + "services/OperationsCenterAgentService/command", false);

    var payload = null

    if (action == "restartGracefully") {
        payload = '<agen:command xmlns:agen="http://org.wso2.carbon.oc.services/agent"><agen:omElement><![CDATA[<ControlCommand xmlns="http://org.wso2.carbon.oc.services/agents"><ocaToken> ' + node.ocaToken + ' </ocaToken><command>restartGracefully</command></ControlCommand>]]></agen:omElement></agen:command>';
    }else if (action == "restart") {
        payload = '<agen:command xmlns:agen="http://org.wso2.carbon.oc.services/agent"><agen:omElement><![CDATA[<ControlCommand xmlns="http://org.wso2.carbon.oc.services/agents"><ocaToken> ' + node.ocaToken + ' </ocaToken><command>restart</command></ControlCommand>]]></agen:omElement></agen:command>';
    }else if (action == "shutdownGracefully") {
        payload = '<agen:command xmlns:agen="http://org.wso2.carbon.oc.services/agent"><agen:omElement><![CDATA[<ControlCommand xmlns="http://org.wso2.carbon.oc.services/agents"><ocaToken> ' + node.ocaToken + ' </ocaToken><command>shutdownGracefully</command></ControlCommand>]]></agen:omElement></agen:command>';
    }else if (action == "shutdown") {
        payload = '<agen:command xmlns:agen="http://org.wso2.carbon.oc.services/agent"><agen:omElement><![CDATA[<ControlCommand xmlns="http://org.wso2.carbon.oc.services/agents"><ocaToken> ' + node.ocaToken + ' </ocaToken><command>shutdown</command></ControlCommand>]]></agen:omElement></agen:command>';
    }

    log.info(payload);

    ws_request.send(payload);

    var responseMessage = ws_request.responseE4X;

    var stringResponse = ws_request.responseText;
    stringResponse = stringResponse.replace("ns:return", "ns:temp");
    stringResponse = stringResponse.replace("ns:return", "ns:temp");

    var xmlResponse = new XML(stringResponse);

    var ns = new Namespace("http://org.wso2.carbon.oc.services/agent")
    var result = parse(xmlResponse.ns::temp.toString());

    if (result != null){
        node.status = result.status;
    }

    response.sendRedirect('/operations_center/');

}else{
    log.debug("Invalid note id. [NodeId=" + nodeId + "]");
}

%>